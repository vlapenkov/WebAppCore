1. Создаем проект с поддепржкой identity
2. Меняем connection string
3. dotnet ef migrations add [migration name] 
  dotnet ef database update - создает БД и применяет миграции
4. Для bundling и minification  достаточно добавить plugin bundle & minify
5. PagedList есть в PeopleController/List


6. После всего переделал проект на использование Webpack (вместо bower)
https://habr.com/post/328638/

7. После пункта 6 переделал на использвание TypeScript, но пока что не подружил с jquery

8. Добавил OWIN с связь с Google

9. Добавил signalR в этом же решении в новом проекте

10. Меняем культуру на лету через Middleware

11. GlobalException filter

12. Добавил PagedList в People/PagedList

13.Добавил кастомную страницу со своей логикой в Pages/CustomPage. Layout используется один общий из Shared/Layout

Вызывается /custompage

14. Добавил поддержку kendo ui autocomplete и datepicker (только js)  , лежит в DummyController


Важно! Для kendo надо использовать  <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2018.1.221/styles/kendo.bootstrap-v4.min.css" />  
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">


    <script src="https://kendo.cdn.telerik.com/2018.1.221/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2018.1.221/js/kendo.all.min.js"></script>

	Отдельно bootstrap4.css не нужен! (портит стили)


	15. Прикручен MemoryCacheManager (NopCommerse)  который обертка над MemCache

	16. LocalizationService (NopCommerse)  который берет переводы из базы


	17. JsonLocalizationService (моя разработка), который берет переводы из папки Resources. 
	Также добавил шаблонизатор @T("test1") во все вьюхи путем переопределения NopRazorPage

	18. Установил ElasticSearch , юзаем в Dummy/Elastic